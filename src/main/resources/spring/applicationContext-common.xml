<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd  http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Activates various annotations to be detected in bean classes: Spring's 
		@Required and @Autowired, as well as JSR 250's @PostConstruct, @PreDestroy 
		and @Resource (if available) and JPA's @PersistenceContext and @PersistenceUnit 
		(if available). The implicitly registered post-processors include: 1. AutowiredAnnotationBeanPostProcessor, 
		2. CommonAnnotationBeanPostProcessor, 3. PersistenceAnnotationBeanPostProcessor, 
		4. RequiredAnnotationBeanPostProcessor. -->
	<context:annotation-config />
	<!-- holding properties for database connectivity / -->
	<context:property-placeholder location="classpath:hibernate.properties" />

	<context:component-scan base-package="com.sinba" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <property name="driverClassName" value="${dataSource.driverClassName}" 
		/> -->
	<!-- <property name="url" -->
	<!-- value="${dataSource.url}" /> -->
	<!-- <property name="username" value="${dataSource.username}" /> -->
	<!-- <property name="password" value="${dataSource.password}" /> -->
	<!-- </bean> -->
<!--	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">-->
<!--		<property name="driver" value="${dataSource.driverClassName}" />-->
<!--		<property name="driverUrl" value="${dataSource.url}" />-->
<!--		<property name="user" value="${dataSource.username}" />-->
<!--		<property name="password" value="${dataSource.password}" />-->
<!--		<property name="maximumConnectionCount" value="500" />-->
<!--		<property name="minimumConnectionCount" value="50" />-->
<!--		<property name="maximumActiveTime" value="1000" />-->
<!--		<property name="houseKeepingSleepTime" value="90000" />-->
<!--		<property name="prototypeCount" value="0" />-->
<!--		<property name="simultaneousBuildThrottle" value="50" />-->
<!--		<property name="maximumConnectionLifetime" value="14400000" />-->
<!--	</bean>-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
      <property name="driverClass">
        <value>${dataSource.driverClassName}</value>
      </property>
      <property name="jdbcUrl">
        <value>${dataSource.url}</value>
      </property>
      <property name="properties">
        <props>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
            <prop key="c3p0.minPoolSize">10</prop>
            <prop key="hc3p0.maxPoolSize">100</prop>
            <prop key="hc3p0.timeout">60</prop>
            <prop key="c3p0.max_statement">50</prop>
            <prop key="c3p0.testConnectionOnCheckout">true</prop>
            <prop key="hibernate.c3p0.testConnectionOnCheckout">false</prop>
            <prop key="user">${dataSource.username}</prop>
            <prop key="password">${dataSource.password}</prop>
        </props>
      </property>
    </bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.sinba" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${dataSource.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${dataSource.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- <bean id="baseDAO" class="com.sinba.common.dao.BaseDAOImplHibernate"
		lazy-init="default" autowire="default" abstract="true">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean> -->
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
	<!-- Instruct Spring to retrieve and apply @AspectJ aspects which are defined 
		as beans in this context. -->
	<aop:aspectj-autoproxy />
	<!-- ========================= Aspect Configuration ======================== -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="within(**.service..*)" advice-ref="txAdvice" />
	</aop:config>

	<!--JPA <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> 
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" 
		p:entityManagerFactory-ref="entityManagerFactory"/> <bean id="jpaAdapter" 
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="${jpa.showSql}"/> 
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" 
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter"> <property 
		name="loadTimeWeaver"> <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/> 
		</property> <property name="persistenceUnitName" value="itsm-demo"></property> 
		</bean> <bean id="baseDAO" class="com.sinba.common.dao.BaseDAOImplJPA" lazy-init="default" 
		autowire="default" abstract="false"> <property name="entityManagerFactory"> 
		<ref bean="entityManagerFactory" /> </property> </bean> -->
</beans>

